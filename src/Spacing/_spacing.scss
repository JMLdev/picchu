$spacing-list: (
  sp6: (
    large: 70px,
    small: 54px,
    flex: calc(44.5px + 1.8vw)
  ),
  sp5: (
    large: 60px,
    small: 40px,
    flex: calc(37px + 1.25vw)
  ),
  sp4: (
    large: 40px,
    small: 33px,
    flex: calc(29.5px + 0.75vw)
  ),
  sp3: (
    large: 28px,
    small: 24px,
    flex: calc(22px + 0.4vw)
  ),
  sp2: (
    large: 20px,
    small: 18px,
    flex: calc(17px + 0.2vw)
  ),
  sp1: (
    large: 12px,
    small: 12px,
    flex: 12px
  )
);

@function str-list($list) {
  $result: ();
  
  @each $item in $list {
    @if $item != ""
    and type-of($item) == string {
      $result: append($result, $item);
    }
  }
  
  @return $result;
}

@mixin vertical-spacing($property, $vals...){
    $last: nth($vals, length($vals));

    @if $last == "small" or $last == "flex" or $last == "large" or $last == "static" {
        //remove last value passed in list, returns a new list
        $v: str-list(set-nth($vals, length($vals), ""));

        @if $last == "static" {
            //if a "static" option is passed in as the last value, use large size without responsive media queries
            @include vertical-properties($property, $v, large);
        } @else {
            //if a size option is passed in as the last value, use size without responsive media queries
            @include vertical-properties($property, $v, $last);
        }
    } @else {
        //default to responsive values
        @include vertical-properties($property, str-list($vals), small);

        @media all and (min-width: $vp2) {
           @include vertical-properties($property, str-list($vals), flex);
        }
        @media all and (min-width: $vp5) {
            @include vertical-properties($property, str-list($vals), large);
        }
    }
}

@mixin vertical-properties($property, $vals, $prop_val){

    $i: str-index($property, "-");

    @if $i != null {
        $dir: str-slice($property, str-index($property, "-") + 1);
        @if $dir == "top" or $dir == "bottom" {
            #{$property}: map-get(map-get($spacing-list, nth($vals, 1)), $prop_val);
        }
    } @else {
        @if length($vals) == 1 {
            $val: map-get(map-get($spacing-list, nth($vals, 1)), $prop_val);
            #{$property}-top: $val;
            #{$property}-bottom: $val;
        } @else if length($vals) == 2 {
            #{$property}-top: map-get(map-get($spacing-list, nth($vals, 1)), $prop_val);
            #{$property}-bottom: map-get(map-get($spacing-list, nth($vals, 2)), $prop_val);
        }
    }
}

//helper classes for section/container vertical spacing
@each $val in $spacing-list {
    .padding-vertical-#{nth($val, 1)} {
        @include vertical-spacing(padding, nth($val, 1));
    }
    .padding-top-#{nth($val, 1)} {
        @include vertical-spacing(padding-top, nth($val, 1));
    }
    .padding-bottom-#{nth($val, 1)} {
        @include vertical-spacing(padding-bottom, nth($val, 1));
    }
    .margin-vertical-#{nth($val, 1)} {
        @include vertical-spacing(margin, nth($val, 1));
    }
    .margin-top-#{nth($val, 1)} {
        @include vertical-spacing(margin-top, nth($val, 1));
    }
    .margin-bottom-#{nth($val, 1)} {
        @include vertical-spacing(margin-bottom, nth($val, 1));
    }
}
.no-padding-vertical {
    @extend .no-padding-top;
    @extend .no-padding-bottom;
}
.no-margin-vertical {
    @extend .no-margin-top;
    @extend .no-margin-bottom;
}

@media screen and (min-width: $vp1) {
    @each $val in $spacing-list {
        .xs-padding-vertical-#{nth($val, 1)} {
            @include vertical-spacing(padding, nth($val, 1), small);
        }
        .xs-padding-top-#{nth($val, 1)} {
            @include vertical-spacing(padding-top, nth($val, 1), small);
        }
        .xs-padding-bottom-#{nth($val, 1)} {
            @include vertical-spacing(padding-bottom, nth($val, 1), small);
        }
        .xs-margin-vertical-#{nth($val, 1)} {
            @include vertical-spacing(margin, nth($val, 1), small);
        }
        .xs-margin-top-#{nth($val, 1)} {
            @include vertical-spacing(margin-top, nth($val, 1), small);
        }
        .xs-margin-bottom-#{nth($val, 1)} {
            @include vertical-spacing(margin-bottom, nth($val, 1), small);
        }
    }
    .xs-no-padding-vertical,
    .xs-no-padding-top {
        padding-top: 0;
    }
    .xs-no-padding-vertical,
    .xs-no-padding-bottom {
        padding-bottom: 0;
    }
    .xs-no-margin-vertical,
    .xs-no-margin-top {
        margin-top: 0;
    }
    .xs-no-margin-vertical,
    .xs-no-margin-bottom {
        margin-bottom: 0;
    }
}
@media screen and (min-width: $vp2) {
    @each $val in $spacing-list {
        .s-padding-vertical-#{nth($val, 1)} {
            @include vertical-spacing(padding, nth($val, 1), flex);
        }
        .s-padding-top-#{nth($val, 1)} {
            @include vertical-spacing(padding-top, nth($val, 1), flex);
        }
        .s-padding-bottom-#{nth($val, 1)} {
            @include vertical-spacing(padding-bottom, nth($val, 1), flex);
        }
        .s-margin-vertical-#{nth($val, 1)} {
            @include vertical-spacing(margin, nth($val, 1), flex);
        }
        .s-margin-top-#{nth($val, 1)} {
            @include vertical-spacing(margin-top, nth($val, 1), flex);
        }
        .s-margin-bottom-#{nth($val, 1)} {
            @include vertical-spacing(margin-bottom, nth($val, 1), flex);
        }
    }
    .s-no-padding-vertical,
    .s-no-padding-top {
        padding-top: 0;
    }
    .s-no-padding-vertical,
    .s-no-padding-bottom {
        padding-bottom: 0;
    }
    .s-no-margin-vertical,
    .s-no-margin-top {
        margin-top: 0;
    }
    .s-no-margin-vertical,
    .s-no-margin-bottom {
        margin-bottom: 0;
    }
}
@media screen and (min-width: $vp3) {
    @each $val in $spacing-list {
        .m-padding-vertical-#{nth($val, 1)} {
            @include vertical-spacing(padding, nth($val, 1), flex);
        }
        .m-padding-top-#{nth($val, 1)} {
            @include vertical-spacing(padding-top, nth($val, 1), flex);
        }
        .m-padding-bottom-#{nth($val, 1)} {
            @include vertical-spacing(padding-bottom, nth($val, 1), flex);
        }
        .m-margin-vertical-#{nth($val, 1)} {
            @include vertical-spacing(margin, nth($val, 1), flex);
        }
        .m-margin-top-#{nth($val, 1)} {
            @include vertical-spacing(margin-top, nth($val, 1), flex);
        }
        .m-margin-bottom-#{nth($val, 1)} {
            @include vertical-spacing(margin-bottom, nth($val, 1), flex);
        }
    }
    .m-no-padding-vertical,
    .m-no-padding-top {
        padding-top: 0;
    }
    .m-no-padding-vertical,
    .m-no-padding-bottom {
        padding-bottom: 0;
    }
    .m-no-margin-vertical,
    .m-no-margin-top {
        margin-top: 0;
    }
    .m-no-margin-vertical,
    .m-no-margin-bottom {
        margin-bottom: 0;
    }
}
@media screen and (min-width: $vp4) {
    @each $val in $spacing-list {
        .l-padding-vertical-#{nth($val, 1)} {
            @include vertical-spacing(padding, nth($val, 1), flex);
        }
        .l-padding-top-#{nth($val, 1)} {
            @include vertical-spacing(padding-top, nth($val, 1), flex);
        }
        .l-padding-bottom-#{nth($val, 1)} {
            @include vertical-spacing(padding-bottom, nth($val, 1), flex);
        }
        .l-margin-vertical-#{nth($val, 1)} {
            @include vertical-spacing(margin, nth($val, 1), flex);
        }
        .l-margin-top-#{nth($val, 1)} {
            @include vertical-spacing(margin-top, nth($val, 1), flex);
        }
        .l-margin-bottom-#{nth($val, 1)} {
            @include vertical-spacing(margin-bottom, nth($val, 1), flex);
        }
    }
    .l-no-padding-vertical,
    .l-no-padding-top {
        padding-top: 0;
    }
    .l-no-padding-vertical,
    .l-no-padding-bottom {
        padding-bottom: 0;
    }
    .l-no-margin-vertical,
    .l-no-margin-top {
        margin-top: 0;
    }
    .l-no-margin-vertical,
    .l-no-margin-bottom {
        margin-bottom: 0;
    }
}
@media screen and (min-width: $vp5) {
    @each $val in $spacing-list {
        .xl-padding-vertical-#{nth($val, 1)} {
            @include vertical-spacing(padding, nth($val, 1), large);
        }
        .xl-padding-top-#{nth($val, 1)} {
            @include vertical-spacing(padding-top, nth($val, 1), large);
        }
        .xl-padding-bottom-#{nth($val, 1)} {
            @include vertical-spacing(padding-bottom, nth($val, 1), large);
        }
        .xl-margin-vertical-#{nth($val, 1)} {
            @include vertical-spacing(margin, nth($val, 1), large);
        }
        .xl-margin-top-#{nth($val, 1)} {
            @include vertical-spacing(margin-top, nth($val, 1), large);
        }
        .xl-margin-bottom-#{nth($val, 1)} {
            @include vertical-spacing(margin-bottom, nth($val, 1), large);
        }
    }
    .xl-no-padding-vertical,
    .xl-no-padding-top {
        padding-top: 0;
    }
    .xl-no-padding-vertical,
    .xl-no-padding-bottom {
        padding-bottom: 0;
    }
    .xl-no-margin-vertical,
    .xl-no-margin-top {
        margin-top: 0;
    }
    .xl-no-margin-vertical,
    .xl-no-margin-bottom {
        margin-bottom: 0;
    }
}

%headline-spacing {
    margin-bottom: 0.33em;

    &.tight {
      margin-bottom: 0.165em;
    }
    &.loose {
      margin-bottom: 0.5em;
    }
    &.xloose {
      margin-bottom: 0.66em;
    }
}

%h1-spacing {
    margin-bottom: 0.4em;

    &.tight {
        margin-bottom: 0.2em;
    }
    &.loose {
        margin-bottom: 0.6em;
    }
    &.xloose {
        margin-bottom: 0.8em;
    }
}

%h2-spacing {
    margin-bottom: 0.5em;

    &.tight {
        margin-bottom: 0.25em;
    }
    &.loose {
        margin-bottom: 0.75em;
    }
    &.xloose {
        margin-bottom: 1em;
    }
}

%h3-spacing,
%h4-spacing {
    margin-bottom: 0.66em;

    &.tight {
        margin-bottom: 0.33em;
    }
    &.loose {
        margin-bottom: 1em;
    }
    &.xloose {
        margin-bottom: 1.32em;
    }
}

%h5-spacing {
    margin-bottom: 0.75em;

    &.tight {
        margin-bottom: 0.37em;
    }
    &.loose {
        margin-bottom: 1.13em;
    }
    &.xloose {
        margin-bottom: 1.5em;
    }
}

p, blockquote {
    margin-bottom: 1.25em;

    &.tight {
        margin-bottom: 0.65em;
    }
    &.loose {
        margin-bottom: 1.85em;
    }
    &.xloose {
        margin-bottom: 2.5em;
    }
}

h1, h2, h3, h4, h5, h6, p, blockquote {
    &.body {
        margin-bottom: 1.25em;

        &.tight {
            margin-bottom: 0.65em;
        }
        &.loose {
            margin-bottom: 1.85em;
        }
        &.xloose {
            margin-bottom: 2.5em;
        }
    }

    &.body-alt,
    &.caption,
    &.caption-alt {
        margin-bottom: 1.25em;

        &.tight {
            margin-bottom: 0.625em;
        }
        &.loose {
            margin-bottom: 1.875em;
        }
        &.xloose {
            margin-bottom: 2.5em;
        }
    }
}

//buttons
button, .button {
    margin-bottom: 1.25em;

    &.tight {
        margin-bottom: 0.625em;
    }
    &.loose {
        margin-bottom: 1.875em;
    }
    &.xloose {
        margin-bottom: 2.5em;
    }
}

//links 
a.isolated-link {
    margin-bottom: 0.8em;

    &.tight {
        margin-bottom: 0.4em;
    }
    &.loose {
        margin-bottom: 1.2em;
    }
    &.loose {
        margin-bottom: 1.6em;
    }
}

//lists
ul, ol {

  li {
    margin-bottom: 0.5em;
  }

  &.tight {
    li {
      margin-bottom: 0.25em;
    }
  }
  &.loose {
    li {
      margin-bottom: 0.75em;
    }
  }
  &.xloose {
    li {
      margin-bottom: 1em;
    }
  }
}